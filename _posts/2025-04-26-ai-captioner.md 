---
title: "AI Captioner: Командная разработка конвейера для обработки данных"
tags:
  - Python
  - Teamwork
  - System Design
  - API
  - Computer Vision
  - YandexGPT
  - OCR
  - Automation
---

В рамках командной работы (3 человека) был с нуля разработан полноценный автоматизированный конвейер (pipeline) для обработки полевых данных с фотографий. Проект решает проблему ручного переноса информации с рукописных этикеток, автоматизируя весь процесс от изображения до готового к анализу отчета.

### Архитектура и моя роль в проекте

Я отвечал за проектирование и реализацию архитектуры пользовательского взаимодействия и конвейера обработки данных. Моя зона ответственности включала разработку трех ключевых утилитарных модулей, которые обеспечили **удобство использования, модульность и качественную отчетность** всего решения.

**1. Модуль ввода пользователя (`usr_input_module.py`):**
*   **Задача:** Создание дружелюбного и надежного интерфейса командной строки (CLI).
*   **Решение:** Весь код, связанный с вводом-выводом, был вынесен в отдельный модуль. Такой подход (**разделение ответственности**) делает основную логику чище и позволяет в будущем легко заменить консольный интерфейс на графический. Реализована валидация ввода и интерактивные подсказки для пользователя.

**2. Модуль генерации отчета (`table_module.py`):**
*   **Задача:** Автоматическое создание структурированного и отформатированного Excel-отчета.
*   **Решение:** Использована библиотека `XlsxWriter` для генерации `.xlsx` файлов с нуля. Модуль инкапсулирует всю логику форматирования (ширина колонок, стили заголовков), предоставляя основной программе простой API для записи данных.

**3. Модуль извлечения метаданных (`exif_module.py`):**
*   **Задача:** Надежное извлечение даты съемки из EXIF-данных фотографий.
*   **Решение:** Использована библиотека `Pillow` для парсинга метаданных. Реализован поиск по нескольким стандартным тегам (`DateTimeOriginal`, `DateTimeDigitized`) и корректная обработка случаев отсутствия данных для обеспечения отказоустойчивости.

### Общий принцип работы конвейера

1.  **Пользовательский ввод:** Скрипт запускается и в интерактивном режиме помогает пользователю выбрать папку с данными.
2.  **Обработка:** Система автоматически перебирает все файлы, извлекая метаданные, распознавая текст через **Yandex Vision API**, корректируя его с помощью **YandexGPT API**.
3.  **Генерация отчета:** Все очищенные и структурированные данные записываются в готовый Excel-файл.

### Ключевые технологии:

Python, XlsxWriter, Pillow, Requests (Yandex API), Git (для совместной работы).
